---
- name: Install the dependencies package for php
  apt:
    name: "{{item}}"
    state: latest
  with_items: "{{packages.dependencies}}"
  tags:
    - packages
    - php

- name: Check if php is installed
  command: /opt/php/bin/php -v
  register: php_installed
  failed_when: php_installed.rc < 0
  changed_when: php_installed.rc > 0
  tags:
    - php

- name: Download PHP source code and unzip it
  unarchive:
    src: "http://php.net/distributions/php-{{ php.version }}.tar.gz"
    dest: "{{ansible_env.HOME}}/packages"
    remote_src: yes
    creates: php.source.lock
  when: php_installed.rc > 0
  tags:
    - php

- name: Run configure script
  shell:  "{{ item }}"
  args:
    chdir: "{{ ansible_env.HOME}}/packages/php-{{ php.version }}/"
    creates: php.install.lock
  with_items:
    - "{{ php.build_configure_command }}"
    - "{{ php.source_configure_command }}"
  when: php_installed.rc > 0
  tags:
    - php

- name: Make and install php
  make:
    chdir: "{{ ansible_env.HOME}}/packages/php-{{ php.version }}/"
    target: install
  when: php_installed.rc > 0
  tags:
    - php

- name: Check if symlink for php is created in /usr/bin
  stat:
    path: /usr/bin/php
  register: php_bin
  tags:
    - php

- name: Create the symlinks for php commands in /usr/bin
  file:
    src: "/opt/php/bin/{{item.src}}"
    dest: "/usr/bin/{{item.dest}}"
    state: link
  with_items:
    - {src: "php", dest: "php"}
    - {src: "php-cgi", dest: "php-cgi"}
    - {src: "phpize", dest: "phpize"}
    - {src: "php-config", dest: "php-config"}
    - {src: "phpdbg", dest: "phpdbg"}
    - {src: "pear", dest: "pear"}
    - {src: "peardev", dest: "peardev"}
    - {src: "pecl", dest: "pecl"}
    - {src: "phar", dest: "phar"}
    - {src: "phar.phar", dest: "phar.phar"}
  when: php_bin.stat.exists == False
  tags:
    - php

- name: Create the symlinks for php-fpm commands in /usr/bin
  file:
    src: "/opt/php/sbin/php-fpm"
    dest: "/usr/bin/php-fpm"
    state: link
  tags:
    - php

- name: Copy php-fpm from php sapi source code to init.d
  copy:
    src: "{{ ansible_env.HOME}}/packages/php-{{ php.version }}/sapi/fpm/init.d.php-fpm"
    dest: /etc/init.d/php-fpm
    remote_src: yes
    owner: root
    group: root
    mode: 0755
  tags:
    - php

- name: Boot start php-fpm
  command: update-rc.d php-fpm defaults 01
  args:
    chdir: /etc/init.d
  tags:
    - php

- name: Check if composer is installed
  stat:
    path: /usr/local/bin/composer
  register: composer_bin
  tags:
    - php
    - php-composer

- name: Download Composer installer.
  get_url:
    url: https://getcomposer.org/installer
    dest: "{{ ansible_env.HOME}}/packages/composer-installer.php"
    mode: 0755
  when: composer_bin.stat.exists == False
  tags:
    - php
    - php-composer

- name: Run Composer installer.
  command: php composer-installer.php --filename=composer --install-dir=/usr/local/bin
  args:
    chdir: "{{ ansible_env.HOME}}/packages/"
    creates: composer.install.lock
  when: not composer_bin.stat.exists
  tags:
    - php
    - php-composer

- name: Create directory for php.ini file
  file:
    path: /opt/php/conf
    state: directory
  tags:
    - php
